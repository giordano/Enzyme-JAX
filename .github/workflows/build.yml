name: Build Enzyme-JAX

on:
  push:
    branches:
    - 'mg/*'
    paths:
      - '.github/workflows/build.yml'
      - '**/BUILD'
      - '**/WORKSPACE'
      - '**/*.bzl'
      - 'builddeps/**'
      - 'patches/**'
      - 'src/**'
      - 'test/**'
      - 'third_party/**'
  pull_request:
    branches:
    - main
    paths:
      - '.github/workflows/build.yml'
      - '**/BUILD'
      - '**/WORKSPACE'
      - '**/*.bzl'
      - 'builddeps/**'
      - 'patches/**'
      - 'src/**'
      - 'test/**'
      - 'third_party/**'

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  build:
    name: Build - ${{ matrix.os }} - python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # `ubuntu-22.04-arm` is considered more stable than `ubuntu-24.04-arm`:
          # <https://github.com/orgs/community/discussions/148648#discussioncomment-12099554>.
          # - ubuntu-22.04-arm
          - macOS-latest
        python:
          - '3.12'
    env:
      HERMETIC_PYTHON_VERSION: ${{ matrix.python }}
    steps:
      - name: Make space on disk
        run: sudo rm -rf /opt/*
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Cache ccache files
        uses: actions/cache@v4
        with:
          path: ${{ runner.workspace }}/.ccache
          key: build-ccache-${{ matrix.os }}-${{ matrix.python }}
          restore-keys: |
            build-ccache-${{ matrix.os }}-
            build-ccache-
      - name: Install packages on Linux
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y ccache
      - name: Install packages on macOS
        if: ${{ runner.os == 'macOS' }}
        run: |
          brew install ccache
      # Don't rely only on bazel cache
      - name: Prepare ccache
        shell: bash
        run: |
          BINDIR="${{ runner.workspace }}/.bin"
          CCACHE_DIR=${{ runner.workspace }}/.ccache
          mkdir -pv "${BINDIR}"
          mkdir -pv "${CCACHE_DIR}"
          for compiler in cc c++ gcc g++ clang clang++; do
              if which "${compiler}" &> /dev/null; then
                  # Copy instead of symlink:
                  # <https://github.com/ccache/ccache/discussions/1279#discussioncomment-5687710>.
                  cp -v $(which ccache) "${BINDIR}/${compiler}"
              fi
          done
          echo "CCACHE_DIR=${CCACHE_DIR}" >> "${GITHUB_ENV}"
          echo "PATH=${BINDIR}:${PATH}" >> "${GITHUB_ENV}"
          if [[ ${{ runner.os }} == "macOS" ]]; then
              echo "CC=false" >> "${GITHUB_ENV}"
          else
              echo "CC=${BINDIR}/gcc" >> "${GITHUB_ENV}"
          fi
      - name: Show compilers
        run: |
          for compiler in cc c++ gcc g++ clang clang++; do
              which ${compiler} || true
              ${compiler} --version || true
              echo "-----"
          done
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - uses: bazel-contrib/setup-bazel@0.14.0
        name: Set up Bazel
        with:
          # Avoid downloading Bazel every time.
          bazelisk-cache: true
          # Store build cache per workflow.
          disk-cache: ${{ github.workflow }}-${{ matrix.os }}-${{ matrix.python }}
          # Share repository cache between workflows.
          repository-cache: true
          bazelisk-version: 1.x
      - name: Build enzymexlamlir-opt
        timeout-minutes: 180
        run: |
          bazel build --repo_env=CC --color=yes //:enzymexlamlir-opt --test_output=errors --sandbox_writable_path=${CCACHE_DIR}
          ccache -sv
      # - name: Build wheel
      #   timeout-minutes: 240
      #   run: |
      #     bazel build --repo_env=CC --color=yes :wheel --test_output=errors
      # - name: Upload wheel
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: Enzyme-JAX-Wheel-${{ matrix.os }}-${{ matrix.python }}
      #     path: "bazel-bin/*.whl"
      #     retention-days: 90
      # - name: Update Python requirements files
      #   run: |
      #     bazel run --repo_env=CC --color=yes //builddeps:requirements.update --sandbox_writable_path=${CCACHE_DIR}
      # - name: Run tests
      #   if: ${{ !startsWith(matrix.os, 'ubuntu-') }}
      #   run: |
      #     bazel test --repo_env=CC --color=yes --test_output=errors --test_verbose_timeout_warnings //test/... --sandbox_writable_path=${CCACHE_DIR}
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }} 
        with:
          name: Enzyme-JAX-tests-${{ matrix.os }}-${{ matrix.python }}
          path: |
            bazel-out/**/test.log
          retention-days: 90
      - name: Upload ccache
        uses: actions/upload-artifact@v4
        with:
          name: Enzyme-JAX-ccache-${{ matrix.os }}-${{ matrix.python }}
          path: |
            ${{ runner.workspace }}/.ccache/**
          retention-days: 90
